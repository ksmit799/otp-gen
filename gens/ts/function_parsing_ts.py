template = """/**
 * THIS FILE WAS AUTOMATICALLY GENERATED BY OTP GEN
 * DO NOT MODIFY
 */
export default class FunctionParsing {{
"""


class FunctionParsingTS:
    def __init__(self, dc_loader, out_path):
        self.dcLoader = dc_loader
        self.outPath = out_path
        self.outBuffer = ""

        self._gen_buffer()

    def _gen_buffer(self):
        self.outBuffer = template.format()

        for name, dc_class in self.dcLoader.dclasses_by_name.items():
            if dc_class.isStruct():
                continue

            for i in range(dc_class.get_num_fields()):
                field = dc_class.get_field(i)
                self.outBuffer += (
                    f"\tpublic static call_{name}_{field.getName()}(): void {{\n"
                )
                self.outBuffer += "\t}\n\n"

        self.outBuffer += "\n}"

    def write(self):
        if not self.outBuffer:
            return

        with open(self.outPath / "FunctionParsing.ts", "w") as out_file:
            out_file.write(self.outBuffer)
